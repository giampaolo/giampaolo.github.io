<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Giampaolo Rodola - recipe</title><link>https://gmpy.dev/</link><description>Python enthusiast, core developer, psutil author</description><lastBuildDate>Sat, 13 Feb 2016 00:00:00 +0100</lastBuildDate><item><title>How to always execute exit functions in Python</title><link>https://gmpy.dev/blog/2016/how-to-always-execute-exit-functions-in-python</link><description>&lt;p&gt;&lt;em&gt;...or why atexit.register() and signal.signal() are evil&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;UPDATE (2016-02-13)&lt;/strong&gt;: this recipe no longer handles SIGINT, SIGQUIT and SIGABRT as aliases for &amp;quot;application exit&amp;quot; because it was a &lt;a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2016-February/038471.html"&gt;bad idea&lt;/a&gt;. It only handles SIGTERM. Also it no longer support Windows because &lt;a class="reference external" href="https://docs.python.org/3/library/signal.html#signal.signal"&gt;signal.signal()&lt;/a&gt; implementation is &lt;a class="reference external" href="http://bugs.python.org/issue26350"&gt;too different&lt;/a&gt; than POSIX …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 12 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-02-12:/blog/2016/how-to-always-execute-exit-functions-in-python</guid><category>2016</category><category>python</category><category>recipe</category></item><item><title>Python and sendfile</title><link>https://gmpy.dev/blog/2014/python-and-sendfile</link><description>&lt;p&gt;&lt;a class="reference external" href="http://linux.die.net/man/2/sendfile"&gt;sendfile(2)&lt;/a&gt; is a UNIX system call which provides a &amp;quot;zero-copy&amp;quot; way of copying data from one file descriptor (a file) to another (a socket). Because this copying is done entirely within the kernel, sendfile(2) is more efficient than the combination of &amp;quot;file.read()&amp;quot; and &amp;quot;socket.send()&amp;quot;, which requires …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 13 Jun 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-06-13:/blog/2014/python-and-sendfile</guid><category>2014</category><category>python</category><category>python-dev</category><category>sendfile</category><category>zerocopy</category><category>network</category><category>recipe</category></item></channel></rss>