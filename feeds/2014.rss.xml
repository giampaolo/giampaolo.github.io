<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Giampaolo Rodola - 2014</title><link>https://gmpy.dev/</link><description>Python enthusiast, core developer, psutil author</description><lastBuildDate>Sun, 21 Sep 2014 00:00:00 +0200</lastBuildDate><item><title>psutil 2.1.2 and Python wheels</title><link>https://gmpy.dev/blog/2014/psutil-212-and-python-wheels</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.1.2 is out. This release has been cooking for a while now, and that's because I've been travelling for the past 3 months between Spain, Japan and Germany. Hopefully I will be staying in Berlin for a while now, so I will have more time to dedicate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 21 Sep 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-09-21:/blog/2014/psutil-212-and-python-wheels</guid><category>2014</category><category>psutil</category><category>wheels</category><category>travel</category></item><item><title>Python and sendfile</title><link>https://gmpy.dev/blog/2014/python-and-sendfile</link><description>&lt;p&gt;&lt;a class="reference external" href="http://linux.die.net/man/2/sendfile"&gt;sendfile(2)&lt;/a&gt; is a UNIX system call which provides a &amp;quot;zero-copy&amp;quot; way of copying data from one file descriptor (a file) to another (a socket). Because this copying is done entirely within the kernel, sendfile(2) is more efficient than the combination of &amp;quot;file.read()&amp;quot; and &amp;quot;socket.send()&amp;quot;, which requires …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 13 Jun 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-06-13:/blog/2014/python-and-sendfile</guid><category>2014</category><category>python</category><category>python-dev</category><category>sendfile</category><category>zerocopy</category><category>network</category></item><item><title>Goodbye Google Code, I am moving to GitHub</title><link>https://gmpy.dev/blog/2014/goodbye-google-code-i-am-moving-to-github</link><description>&lt;p&gt;8 years ago I started hosting my first open source project (&lt;a class="reference external" href="https://code.google.com/p/pyftpdlib/"&gt;pyftpdlib&lt;/a&gt;) on Google Code and I later ended up also hosting &lt;a class="reference external" href="https://code.google.com/p/psutil/"&gt;psutil&lt;/a&gt; and &lt;a class="reference external" href="https://code.google.com/p/pysendfile/"&gt;pysendfile&lt;/a&gt;. Back then GC had just been released and similarly to other Google products I appreciated the clean and minimalistic interface, the excellent bug tracker and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 26 May 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-05-26:/blog/2014/goodbye-google-code-i-am-moving-to-github</guid><category>2014</category><category>rant</category></item><item><title>psutil 2.0</title><link>https://gmpy.dev/blog/2014/psutil-20</link><description>&lt;p&gt;The time has finally come: &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.0 is out! This is a release which took me a considerable amount of effort and careful thinking during the past 4 months as I went through a major &lt;strong&gt;rewrite and reorganization&lt;/strong&gt; of both python and C extension modules. To get a sense …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-03-10:/blog/2014/psutil-20</guid><category>2014</category><category>psutil</category></item><item><title>Reimplementing netstat in Python</title><link>https://gmpy.dev/blog/2014/reimplementing-netstat-in-python</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.1.0 is out and with it I finally managed to implement something I've been wanting to have for a long time: netstat-like functionalities (see &lt;a class="reference external" href="https://code.google.com/p/psutil/issues/detail?id=387"&gt;ticket&lt;/a&gt;). Similarly to &amp;quot;netstat -antp&amp;quot; on UNIX you can now list system-wide connections in pure python and also determine &lt;strong&gt;what process (PID) is …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-03-10:/blog/2014/reimplementing-netstat-in-python</guid><category>2014</category><category>python</category><category>network</category></item><item><title>psutil 2.0 API redesign</title><link>https://gmpy.dev/blog/2014/psutil-20-api-redesign</link><description>&lt;p&gt;This my second blog post is going to be about &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.0, a major release in which I decided to reorganize the existing API for the sake of consistency. At the time of writing psutil 2.0 is still under development and the intent of this blog post is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sat, 11 Jan 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-01-11:/blog/2014/psutil-20-api-redesign</guid><category>2014</category><category>psutil</category><category>api-design</category></item></channel></rss>