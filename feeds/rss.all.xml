<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Giampaolo Rodola</title><link>https://gmpy.dev/</link><description>Python enthusiast, core developer, psutil author</description><lastBuildDate>Wed, 02 Apr 2025 00:00:00 +0200</lastBuildDate><item><title>A Brave / Chrome extension to reorder new tabs</title><link>https://gmpy.dev/blog/2025/a-brave-chrome-extension-to-reorder-new-tabs</link><description>&lt;p&gt;While browsing, I almost always keep three tabs open: Gmail, Slack, and
Microsoft Teams (for work). I find it convenient to have them always in the
same position (1, 2, and 3), so I can quickly switch to them using keyboard
shortcuts (&lt;code&gt;alt+1&lt;/code&gt;, &lt;code&gt;alt+2&lt;/code&gt;, &lt;code&gt;alt+3&lt;/code&gt;). While the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Wed, 02 Apr 2025 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2025-04-02:/blog/2025/a-brave-chrome-extension-to-reorder-new-tabs</guid><category>2025</category><category>js</category><category>brave</category><category>dotfiles</category></item><item><title>psutil: drop Python 2.7 support</title><link>https://gmpy.dev/blog/2025/psutil-drop-python-27-support</link><description>&lt;p&gt;About dropping Python 2.7 support in psutil, 3 years ago
&lt;a href="https://github.com/giampaolo/psutil/issues/2014#issuecomment-969263432"&gt;I stated&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Not a chance, for many years to come. [Python 2.7] currently represents 7-10%
of total downloads, meaning around 70k / 100k downloads per day.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Only 3 years later, and to my surprise, &lt;strong&gt;downloads for Python 2.7 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Thu, 13 Feb 2025 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2025-02-13:/blog/2025/psutil-drop-python-27-support</guid><category>2025</category><category>psutil</category><category>python</category></item><item><title>Recognize connection errors</title><link>https://gmpy.dev/blog/2023/recognize-connection-errors</link><description>&lt;p&gt;Lately I've been dealing with an asynchronous TCP client app which sends
messages to a remote server. Some of these messages are important, and cannot
get lost. Because the connection may drop at any time, I had to implement a
mechanism to resend the message once the client reconnects. As …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Thu, 16 Mar 2023 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2023-03-16:/blog/2023/recognize-connection-errors</guid><category>2023</category><category>python</category><category>socket</category><category>network</category></item><item><title>Sublime Text: remember cursor position plugin</title><link>https://gmpy.dev/blog/2022/sublime-text-remember-cursor-position-plugin</link><description>&lt;p&gt;My editor of choice for Python development is Sublime Text.
It has been for a very long time (10 years).
It's fast, minimalist and straight to the point, which is why I always resisted
the temptation to use more advanced and modern IDEs such as PyCharm or VS code,
which …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 18 Mar 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2022-03-18:/blog/2022/sublime-text-remember-cursor-position-plugin</guid><category>2022</category><category>sublime</category><category>python</category></item><item><title>New Pelican website</title><link>https://gmpy.dev/blog/2020/new-pelican-website</link><description>&lt;p&gt;Hello there. I present you my new blog / personal website!
This is something I've been wanting to do for a very long time, since the old blog hosted at &lt;a class="reference external" href="https://grodola.blogspot.com/"&gt;https://grodola.blogspot.com/&lt;/a&gt; was... well, too old. =)
This new site is based on &lt;a class="reference external" href="https://docs.getpelican.com/en/stable/"&gt;Pelican&lt;/a&gt;, a static website generator similar to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 26 Jun 2020 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2020-06-26:/blog/2020/new-pelican-website</guid><category>2020</category><category>announce</category><category>python</category><category>pelican</category><category>psutil</category></item><item><title>System load average on Windows in Python</title><link>https://gmpy.dev/blog/2019/system-load-average-on-windows-in-python</link><description>&lt;p&gt;New &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 5.6.2 release implements an emulation of &lt;a class="reference external" href="https://docs.python.org/3/library/os.html#os.getloadavg"&gt;os.getloadavg()&lt;/a&gt; on Windows which was kindly &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/1485"&gt;contributed by Ammar Askar&lt;/a&gt; who originally implemented it for &lt;a class="reference external" href="https://github.com/python/cpython/pull/8357/files"&gt;cPython's test suite&lt;/a&gt;. This idea has been floating around for quite a while. The first proposal dates back to &lt;a class="reference external" href="https://code.google.com/archive/p/psutil/issues/139"&gt;2010&lt;/a&gt;, when psutil was still …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Wed, 29 May 2019 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2019-05-29:/blog/2019/system-load-average-on-windows-in-python</guid><category>2019</category><category>psutil</category><category>windows</category><category>unittest</category><category>travel</category><category>python</category></item><item><title>psutil 5.6.0 and process parents</title><link>https://gmpy.dev/blog/2019/psutil-560-and-process-parents</link><description>&lt;p&gt;Hello world =)&lt;/p&gt;
&lt;p&gt;It was a long time since my last blog post (over 1 year and a half). During this time I moved between Italy, Prague and Shenzhen (China), and also contributed a couple of nice patches for Python I want to blog about when Python 3.8 will be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Tue, 05 Mar 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2019-03-05:/blog/2019/psutil-560-and-process-parents</guid><category>2019</category><category>psutil</category><category>python</category></item><item><title>psutil 5.4.0 and AIX support</title><link>https://gmpy.dev/blog/2017/psutil-540-and-aix-support</link><description>&lt;p&gt;After a long time &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; finally adds support for a brand new exotic platform: AIX! Honestly I am not sure how many AIX Python users are out there (I suppose not many) but still, here it is. For this we have to thank &lt;a class="reference external" href="https://github.com/wiggin15"&gt;Arnon Yaari&lt;/a&gt; who started working on the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Thu, 12 Oct 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2017-10-12:/blog/2017/psutil-540-and-aix-support</guid><category>2017</category><category>psutil</category><category>aix</category><category>python</category></item><item><title>psutil 5.3.0 and full unicode support</title><link>https://gmpy.dev/blog/2017/psutil-530-and-full-unicode-support</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 5.3.0 is finally out. This release is a major one, as it includes tons of improvements and bugfixes, probably like no other previous release. It is interesting to notice how huge the &lt;a class="reference external" href="https://github.com/giampaolo/psutil/compare/release-5.2.2...release-5.3.0#files_bucket"&gt;diff&lt;/a&gt; between 5.2.2 and 5.3.0 is. This is due to the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 03 Sep 2017 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2017-09-03:/blog/2017/psutil-530-and-full-unicode-support</guid><category>2017</category><category>psutil</category><category>travel</category><category>python</category></item><item><title>psutil 5.1.1 system temperature, battery and CPU frequency</title><link>https://gmpy.dev/blog/2017/psutil-511-system-temperature-battery-and-cpu-frequency</link><description>&lt;p&gt;OK, here's another &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; release. Main highlights of this release are sensors-related APIs.&lt;/p&gt;
&lt;div class="section" id="temperatures"&gt;
&lt;h2&gt;Temperatures&lt;a class="headerlink" href="#temperatures" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;It is now possible to retrieve hardware temperatures. The relevant commit is &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/962/files"&gt;here&lt;/a&gt;. Unfortunately this is Linux only. I couldn't manage to implement this on other platforms mainly for two reasons:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;On Windows it is hard …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Wed, 01 Feb 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2017-02-01:/blog/2017/psutil-511-system-temperature-battery-and-cpu-frequency</guid><category>2017</category><category>psutil</category><category>python</category></item><item><title>psutil 5.5.0 is twice as fast</title><link>https://gmpy.dev/blog/2016/psutil-550-is-twice-as-fast</link><description>&lt;p&gt;OK, this is a big one. Starting from psutil 5.0.0 you can query multiple &lt;cite&gt;Process&lt;/cite&gt; information around twice as fast than with previous versions (see &lt;a class="reference external" href="https://github.com/giampaolo/psutil/issues/799"&gt;original ticket&lt;/a&gt; and &lt;a class="reference external" href="https://psutil.readthedocs.io/en/latest/#psutil.Process.oneshot"&gt;updated doc&lt;/a&gt;). It took me 7 months, 108 commits and a massive refactoring of psutil internals (here is the &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/937/files"&gt;big …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 06 Nov 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-11-06:/blog/2016/psutil-550-is-twice-as-fast</guid><category>2016</category><category>psutil</category><category>performance</category><category>macos</category><category>bsd</category><category>sunos</category><category>python</category></item><item><title>psutil 4.4.0: improved Linux memory metrics</title><link>https://gmpy.dev/blog/2016/psutil-440-improved-linux-memory-metrics</link><description>&lt;p&gt;OK, here's another &lt;a class="reference external" href="https://github.com/giampaolo/psutil"&gt;psutil&lt;/a&gt; release. Main highlights of this release are more accurate memory metrics on Linux and different OSX fixes. Here goes.&lt;/p&gt;
&lt;div class="section" id="linux-virtual-memory"&gt;
&lt;h2&gt;Linux virtual memory&lt;a class="headerlink" href="#linux-virtual-memory" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This new release sets a milestone regarding &lt;tt class="docutils literal"&gt;virtual_memory()&lt;/tt&gt; metrics on Linux which are now calculated way &lt;a class="reference external" href="https://github.com/giampaolo/psutil/issues/887"&gt;more precisely&lt;/a&gt; (see &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/890/files"&gt;commit&lt;/a&gt;). Across the years different …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 23 Oct 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-10-23:/blog/2016/psutil-440-improved-linux-memory-metrics</guid><category>2016</category><category>psutil</category><category>memory</category><category>python</category></item><item><title>psutil 4.2.0: Windows services in Python</title><link>https://gmpy.dev/blog/2016/psutil-420-windows-services-in-python</link><description>&lt;p&gt;New &lt;a class="reference external" href="https://github.com/giampaolo/psutil"&gt;psutil&lt;/a&gt; 4.2.0 is out. The main feature of this release is the support for Windows services:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;psutil&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;psutil&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;win_service_iter&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WindowsService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;AeLookupSvc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Application Experience&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;38850096&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WindowsService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ALG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Application Layer Gateway Service&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;38850128&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WindowsService&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;APNMCP&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;display_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Ask Update Service&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;at …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 15 May 2016 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-05-15:/blog/2016/psutil-420-windows-services-in-python</guid><category>2016</category><category>psutil</category><category>windows</category><category>python</category></item><item><title>psutil NetBSD support</title><link>https://gmpy.dev/blog/2016/psutil-netbsd-support</link><description>&lt;p&gt;Roughly two months have passed since I last announced &lt;a class="reference external" href="https://github.com/giampaolo/psutil"&gt;psutil&lt;/a&gt; added support for OpenBSD platforms. Today I am happy to announce we also have NetBSD support! This was contributed by &lt;a class="reference external" href="https://github.com/0-wiz-0"&gt;Thomas Klausner&lt;/a&gt;, &lt;a class="reference external" href="https://github.com/ryoon"&gt;Ryo Onodera&lt;/a&gt; and myself in PR &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/557"&gt;#570&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="differences-with-freebsd-and-openbsd"&gt;
&lt;h2&gt;Differences with FreeBSD (and OpenBSD)&lt;a class="headerlink" href="#differences-with-freebsd-and-openbsd" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;NetBSD implementation has similar limitations as …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Thu, 25 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-02-25:/blog/2016/psutil-netbsd-support</guid><category>2016</category><category>psutil</category><category>bsd</category><category>python</category></item><item><title>Real process memory and environ in Python</title><link>https://gmpy.dev/blog/2016/real-process-memory-and-environ-in-python</link><description>&lt;p&gt;New psutil 4.0.0 is out, with some interesting news about process memory metrics. I'll just get straight to the point and describe what's new.&lt;/p&gt;
&lt;div class="section" id="real-process-memory-info"&gt;
&lt;h2&gt;&amp;quot;Real&amp;quot; process memory info&lt;a class="headerlink" href="#real-process-memory-info" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Determining how much memory a process &lt;strong&gt;really&lt;/strong&gt; uses is not an easy matter (see &lt;a class="reference external" href="https://lwn.net/Articles/230975/"&gt;this&lt;/a&gt; and &lt;a class="reference external" href="http://bmaurer.blogspot.it/2006/03/memory-usage-with-smaps.html"&gt;this&lt;/a&gt;). RSS (Resident Set …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Wed, 17 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-02-17:/blog/2016/real-process-memory-and-environ-in-python</guid><category>2016</category><category>psutil</category><category>memory</category><category>python</category></item><item><title>How to always execute exit functions in Python</title><link>https://gmpy.dev/blog/2016/how-to-always-execute-exit-functions-in-python</link><description>&lt;p&gt;&lt;em&gt;...or why atexit.register() and signal.signal() are evil&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;UPDATE (2016-02-13)&lt;/strong&gt;: this recipe no longer handles &lt;tt class="docutils literal"&gt;SIGINT&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;SIGQUIT&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;SIGABRT&lt;/tt&gt; as aliases for &amp;quot;application exit&amp;quot; because it was a &lt;a class="reference external" href="https://mail.python.org/pipermail/python-ideas/2016-February/038471.html"&gt;bad idea&lt;/a&gt;. It only handles &lt;tt class="docutils literal"&gt;SIGTERM&lt;/tt&gt;. Also it no longer support Windows because &lt;a class="reference external" href="https://docs.python.org/3/library/signal.html#signal.signal"&gt;signal.signal()&lt;/a&gt; implementation is &lt;a class="reference external" href="http://bugs.python.org/issue26350"&gt;too different&lt;/a&gt; than POSIX …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 12 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-02-12:/blog/2016/how-to-always-execute-exit-functions-in-python</guid><category>2016</category><category>python</category><category>recipe</category></item><item><title>psutil OpenBSD support</title><link>https://gmpy.dev/blog/2015/psutil-openbsd-support</link><description>&lt;p&gt;OK, this is a big one: starting from version 3.3.0 (released just now) &lt;a class="reference external" href="https://github.com/giampaolo/psutil"&gt;psutil&lt;/a&gt; will officially support OpenBSD platforms. This was contributed by &lt;a class="reference external" href="https://github.com/landryb"&gt;Landry Breuil&lt;/a&gt; (thanks dude!) and myself in &lt;a class="reference external" href="https://github.com/giampaolo/psutil/pull/615"&gt;PR-615&lt;/a&gt;. The interesting parts of the code changes are this and this.&lt;/p&gt;
&lt;div class="section" id="differences-with-freebsd"&gt;
&lt;h2&gt;Differences with FreeBSD&lt;a class="headerlink" href="#differences-with-freebsd" title="Permalink to this headline"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As expected, OpenBSD …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Wed, 25 Nov 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2015-11-25:/blog/2015/psutil-openbsd-support</guid><category>2015</category><category>psutil</category><category>bsd</category><category>python</category></item><item><title>psutil 3.0, aka how I reimplemented ifconfig in Python</title><link>https://gmpy.dev/blog/2015/psutil-30-aka-how-i-reimplemented-ifconfig-in-python</link><description>&lt;p&gt;Here we are. It's been a long time since my last blog post and my last &lt;a class="reference external" href="https://github.com/giampaolo/psutil"&gt;psutil&lt;/a&gt; release. The reason? I've been travelling! I mean... a lot. I've spent 3 months in Berlin, 3 weeks in Japan and 2 months in New York City. While I was there I finally …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sat, 13 Jun 2015 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2015-06-13:/blog/2015/psutil-30-aka-how-i-reimplemented-ifconfig-in-python</guid><category>2015</category><category>psutil</category><category>travel</category><category>personal</category><category>python</category></item><item><title>psutil 2.1.2 and Python wheels</title><link>https://gmpy.dev/blog/2014/psutil-212-and-python-wheels</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.1.2 is out. This release has been cooking for a while now, and that's because I've been travelling for the past 3 months between Spain, Japan and Germany. Hopefully I will be staying in Berlin for a while now, so I will have more time to dedicate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sun, 21 Sep 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-09-21:/blog/2014/psutil-212-and-python-wheels</guid><category>2014</category><category>psutil</category><category>wheels</category><category>travel</category><category>python</category></item><item><title>Python and sendfile</title><link>https://gmpy.dev/blog/2014/python-and-sendfile</link><description>&lt;p&gt;&lt;a class="reference external" href="http://linux.die.net/man/2/sendfile"&gt;sendfile(2)&lt;/a&gt; is a UNIX system call which provides a &amp;quot;zero-copy&amp;quot; way of copying data from one file descriptor (a file) to another (a socket). Because this copying is done entirely within the kernel, &lt;cite&gt;sendfile(2)&lt;/cite&gt; is more efficient than the combination of &lt;cite&gt;file.read()&lt;/cite&gt; and &lt;cite&gt;socket.send()&lt;/cite&gt;, which requires …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 13 Jun 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-06-13:/blog/2014/python-and-sendfile</guid><category>2014</category><category>python</category><category>python-dev</category><category>sendfile</category><category>zerocopy</category><category>network</category><category>recipe</category><category>socket</category></item><item><title>Goodbye Google Code, I am moving to GitHub</title><link>https://gmpy.dev/blog/2014/goodbye-google-code-i-am-moving-to-github</link><description>&lt;p&gt;8 years ago I started hosting my first open source project (&lt;a class="reference external" href="https://code.google.com/p/pyftpdlib/"&gt;pyftpdlib&lt;/a&gt;) on Google Code and I later ended up also hosting &lt;a class="reference external" href="https://code.google.com/p/psutil/"&gt;psutil&lt;/a&gt; and &lt;a class="reference external" href="https://code.google.com/p/pysendfile/"&gt;pysendfile&lt;/a&gt;. Back then GC had just been released and similarly to other Google products I appreciated the clean and minimalistic interface, the excellent bug tracker and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 26 May 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-05-26:/blog/2014/goodbye-google-code-i-am-moving-to-github</guid><category>2014</category><category>rant</category></item><item><title>psutil 2.0</title><link>https://gmpy.dev/blog/2014/psutil-20</link><description>&lt;p&gt;The time has finally come: &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.0 is out! This is a release which took me a considerable amount of effort and careful thinking during the past 4 months as I went through a major &lt;strong&gt;rewrite and reorganization&lt;/strong&gt; of both python and C extension modules. To get a sense …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-03-10:/blog/2014/psutil-20</guid><category>2014</category><category>psutil</category><category>python</category></item><item><title>Reimplementing netstat in Python</title><link>https://gmpy.dev/blog/2014/reimplementing-netstat-in-python</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.1.0 is out and with it I finally managed to implement something I've been wanting to have for a long time: netstat-like functionalities (see &lt;a class="reference external" href="https://code.google.com/p/psutil/issues/detail?id=387"&gt;ticket&lt;/a&gt;). Similarly to &lt;cite&gt;&amp;quot;netstat -antp&amp;quot;&lt;/cite&gt; on UNIX you can now list system-wide connections in pure python and also determine &lt;strong&gt;what process (PID) is …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-03-10:/blog/2014/reimplementing-netstat-in-python</guid><category>2014</category><category>python</category><category>network</category></item><item><title>psutil 2.0 API redesign</title><link>https://gmpy.dev/blog/2014/psutil-20-api-redesign</link><description>&lt;p&gt;This my second blog post is going to be about &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.0, a major release in which I decided to reorganize the existing API for the sake of consistency. At the time of writing psutil 2.0 is still under development and the intent of this blog post is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sat, 11 Jan 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-01-11:/blog/2014/psutil-20-api-redesign</guid><category>2014</category><category>psutil</category><category>api-design</category><category>python</category></item><item><title>Making constants part of your API is evil</title><link>https://gmpy.dev/blog/2013/making-constants-part-of-your-api-is-evil</link><description>&lt;p&gt;One of the initial features which were included in &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; since day one (5 years ago) were system's boot time, number of CPUs and total physical memory. These metrics have one thing in common: they are (apparently) not supposed to change over time. That is why we (me and &lt;a class="reference external" href="http://www.jayloden.com/"&gt;Jay …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sat, 21 Dec 2013 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2013-12-21:/blog/2013/making-constants-part-of-your-api-is-evil</guid><category>2013</category><category>python</category><category>api-design</category></item></channel></rss>