<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Giampaolo Rodola - python</title><link>https://gmpy.dev/</link><description>Python enthusiast, core developer, psutil author</description><lastBuildDate>Sat, 13 Feb 2016 00:00:00 +0100</lastBuildDate><item><title>How to always execute exit functions in Python</title><link>https://gmpy.dev/blog/2016/how-to-always-execute-exit-functions-in-python</link><description>&lt;p&gt;&lt;em&gt;...or why atexit.register() and signal.signal() are evil&lt;/em&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;UPDATE (2016-02-13)&lt;/strong&gt;: this recipe no longer handles SIGINT, SIGQUIT and SIGABRT as aliases for &amp;quot;application exit&amp;quot; because it was a bad idea. It only handles SIGTERM. Also it no longer support Windows because signal.signal() implementation is too different than POSIX …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 12 Feb 2016 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2016-02-12:/blog/2016/how-to-always-execute-exit-functions-in-python</guid><category>2016</category><category>python</category></item><item><title>Python and sendfile</title><link>https://gmpy.dev/blog/2014/python-and-sendfile</link><description>&lt;p&gt;&lt;a class="reference external" href="http://linux.die.net/man/2/sendfile"&gt;sendfile(2)&lt;/a&gt; is a UNIX system call which provides a &amp;quot;zero-copy&amp;quot; way of copying data from one file descriptor (a file) to another (a socket). Because this copying is done entirely within the kernel, sendfile(2) is more efficient than the combination of &amp;quot;file.read()&amp;quot; and &amp;quot;socket.send()&amp;quot;, which requires …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Fri, 13 Jun 2014 00:00:00 +0200</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-06-13:/blog/2014/python-and-sendfile</guid><category>2014</category><category>python</category><category>python-dev</category><category>sendfile</category><category>zerocopy</category><category>network</category></item><item><title>Reimplementing netstat in Python</title><link>https://gmpy.dev/blog/2014/reimplementing-netstat-in-python</link><description>&lt;p&gt;&lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; 2.1.0 is out and with it I finally managed to implement something I've been wanting to have for a long time: netstat-like functionalities (see &lt;a class="reference external" href="https://code.google.com/p/psutil/issues/detail?id=387"&gt;ticket&lt;/a&gt;). Similarly to &amp;quot;netstat -antp&amp;quot; on UNIX you can now list system-wide connections in pure python and also determine &lt;strong&gt;what process (PID) is …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Mon, 10 Mar 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2014-03-10:/blog/2014/reimplementing-netstat-in-python</guid><category>2014</category><category>python</category><category>network</category></item><item><title>Making constants part of your API is evil</title><link>https://gmpy.dev/blog/2013/making-constants-part-of-your-api-is-evil</link><description>&lt;p&gt;One of the initial features which were included in &lt;a class="reference external" href="https://github.com/giampaolo/psutil/"&gt;psutil&lt;/a&gt; since day one (5 years ago) were system's boot time, number of CPUs and total physical memory. These metrics have one thing in common: they are (apparently) not supposed to change over time. That is why we (me and &lt;a class="reference external" href="http://www.jayloden.com/"&gt;Jay …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giampaolo Rodola</dc:creator><pubDate>Sat, 21 Dec 2013 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:gmpy.dev,2013-12-21:/blog/2013/making-constants-part-of-your-api-is-evil</guid><category>2013</category><category>python</category><category>api-design</category></item></channel></rss>